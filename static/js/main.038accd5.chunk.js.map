{"version":3,"sources":["store/loaderReducer.ts","store/currentTodoReducer.ts","store/TodosReducers.ts","api/api.ts","store/index.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","type","initialState","todo","payload","todos","BASE_URL","wait","delay","Promise","resolve","setTimeout","get","url","a","fetch","res","json","rootReducer","combineReducers","loader","loading","action","selectTodo","state","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppSelector","useSelector","TodoList","dispatch","useDispatch","className","map","classNames","completed","title","onClick","todoAction","id","TodoFilter","handleQuery","query","handleTarget","applyQuery","defaultValue","onChange","event","target","value","placeholder","ev","Loader","TodoModal","useState","user","setUser","selectedTodo","useEffect","userId","then","person","href","email","name","App","setQuery","filtredTodo","setFiltredTodo","targetValue","setTargetValue","appliedQuery","setAppliedQuery","useCallback","lodash","debounce","loaderActions","todosFromServer","TodosActions","filter","prevState","includes","filterForTodos","shuffle","input","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.038accd5.chunk.js","sourcesContent":["export type ActionLoading = (\n  StartLoadingAction\n  | FinishLoadingAction\n);\nexport type StartLoadingAction = {\n  type: 'START_LOADING',\n};\n\nexport type FinishLoadingAction = {\n  type: 'FINISH_LOADING',\n};\n\n// eslint-disable-next-line max-len\nexport const loaderReducer = (loading = false, action: ActionLoading): boolean => {\n  switch (action.type) {\n    case 'START_LOADING':\n      return true;\n\n    case 'FINISH_LOADING':\n      return false;\n\n    default:\n      return loading;\n  }\n};\n\nexport const actionsLoader = {\n\n};\n\nexport const actions = {\n  startLoading: (): StartLoadingAction => ({\n    type: 'START_LOADING',\n  }),\n\n  finishLoading: (): FinishLoadingAction => ({\n    type: 'FINISH_LOADING',\n  }),\n};\n","import { Todo } from '../react-app-env';\n\nconst initialState: TodoState = {\n\n  todo: null,\n};\n\nexport type Todoselected = {\n  type: 'TODO_SELECT',\n  payload: Todo | null,\n};\n\nexport type ResetTodo = {\n  type: 'TODO_REST',\n};\n\nexport type ActionTodo = (\n  Todoselected\n  | ResetTodo\n);\n\nexport type TodoState = {\n  todo: Todo | null;\n};\n\n// eslint-disable-next-line max-len\nexport const userReducer = (state = initialState, action: ActionTodo): TodoState => {\n  switch (action.type) {\n    case 'TODO_SELECT':\n      return {\n        ...state,\n        todo: action.payload,\n      };\n\n    case 'TODO_REST':\n      return {\n        ...state,\n        todo: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const actionTodo = {\n\n};\n\nexport const actions = {\n  setTodo: (payload: Todo): Todoselected => ({\n    type: 'TODO_SELECT',\n    payload,\n  }),\n\n  resetTodo: ():ResetTodo => ({\n    type: 'TODO_REST',\n  }),\n};\n","import { Todo } from '../react-app-env';\n\nexport type SetTodoList = {\n  type: 'SET_TODOLIST',\n  payload: Todo[],\n};\n\nexport type ActionTodoList = (\n  SetTodoList\n);\n\nexport const TodosReducer = (\n  todos: Todo[] = [],\n  action: ActionTodoList,\n): Todo[] => {\n  switch (action.type) {\n    case 'SET_TODOLIST':\n      return action.payload;\n    default:\n      return todos;\n  }\n};\n\nexport const actionsLoader = {\n\n};\n\nexport const actions = {\n  setTodos: (todos: Todo[]): SetTodoList => ({\n    type: 'SET_TODOLIST',\n    payload: todos,\n  }),\n};\n","import { Todo, User } from '../react-app-env';\n\nconst BASE_URL = 'https://mate.academy/students-api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nasync function get<T>(url: string): Promise<T> {\n  await wait(1000);\n  const res = await fetch(BASE_URL + url);\n\n  return res.json();\n}\n\nexport const getTodos = () => {\n  return get<Todo[]>('/todos');\n};\n\nexport const getUser = (userId:number) => {\n  return get<User>(`/users/${userId}`);\n};\n","import {\n  createStore, applyMiddleware, combineReducers, Dispatch,\n} from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { loaderReducer, actions as loaderActions } from './loaderReducer';\nimport { userReducer } from './currentTodoReducer';\nimport { TodosReducer, actions as TodosActions } from './TodosReducers';\nimport { getTodos } from '../api/api';\n\nconst rootReducer = combineReducers({\n  loader: loaderReducer,\n  selectTodo: userReducer,\n  todos: TodosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport const loadTodo = () => {\n  return async (dispatch: Dispatch) => {\n    dispatch(loaderActions.startLoading());\n    const todosFromServer = await getTodos();\n\n    dispatch(TodosActions.setTodos(todosFromServer));\n    dispatch(loaderActions.finishLoading());\n  };\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Todo } from '../../react-app-env';\nimport { actions as todoAction } from '../../store/currentTodoReducer';\n\ninterface Props {\n  todos: Todo[]\n}\nexport const TodoList:FC<Props> = ({ todos }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <table\n      data-cy=\"listOfTodos\"\n      className=\"table is-narrow is-fullwidth\"\n    >\n      <tbody>\n\n        {\n          todos?.map(todo => (\n            <tr\n              key={todo.id}\n              className={\n                classNames(\n                  'has-background-success-light',\n                  'has-text-success',\n                  {\n                    'has-background-danger-light': !todo.completed,\n                    'has-text-danger': !todo.completed,\n                  },\n                )\n              }\n            >\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon is-size-5\">\n                    <i className=\"fas fa-check-square\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered\">\n                {todo.title}\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  className=\"button is-warning\"\n                  type=\"button\"\n                  onClick={() => dispatch(todoAction.setTodo(todo))}\n                >\n                  {`Show ${todo.id}`}\n                </button>\n              </td>\n            </tr>\n          ))\n        }\n      </tbody>\n    </table>\n  );\n};\n","import { FC } from 'react';\n\ninterface Props {\n  handleQuery: (input: string) => void\n  query:string\n  handleTarget: (target: string) => void\n  applyQuery: (str: string) => void\n}\n\nexport const TodoFilter:FC<Props> = ({\n  handleQuery,\n  query,\n  handleTarget,\n  applyQuery,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            defaultValue=\"all\"\n            onChange={(event) => {\n              handleTarget(event.target.value);\n            }}\n          >\n            <option\n              value=\"all\"\n            >\n              All\n            </option>\n            <option\n              value=\"active\"\n            >\n              Active\n            </option>\n            <option\n              value=\"completed\"\n            >\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"filterByTitle\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={(ev) => {\n            handleQuery(ev.target.value);\n            applyQuery(ev.target.value);\n          }}\n          value={query}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\">\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              type=\"button\"\n              className=\"delete has-text\"\n              onClick={() => handleQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getUser } from '../../api/api';\n\nimport { User } from '../../react-app-env';\nimport { useAppSelector } from '../../store';\nimport { actions as todoAction } from '../../store/currentTodoReducer';\n\nimport { Loader } from '../Loader';\n\nexport const TodoModal: FC = () => {\n  const [user, setUser] = useState<User>();\n  const selectedTodo = useAppSelector(state => state.selectTodo.todo);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(person => setUser(person));\n    }\n  });\n\n  return (\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\" />\n      {\n        !user\n          ? (<Loader />)\n          : (\n            <div className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                <div className=\"modal-card-title has-text-weight-medium\">\n                  {selectedTodo?.id}\n                </div>\n                <a\n                  href=\"#close\"\n                  className=\"delete\"\n                  type=\"button\"\n                  onClick={() => dispatch(todoAction.resetTodo())}\n                >\n                  Close\n                </a>\n              </header>\n\n              <div className=\"modal-card-body\">\n                <p className=\"block\">{selectedTodo?.title}</p>\n\n                <p className=\"block\">\n                  {\n                    selectedTodo?.completed\n                      ? (<strong className=\"has-text-success\">Done</strong>)\n                      : (<strong className=\"has-text-danger\">Planned</strong>)\n                  }\n\n                  {' by '}\n                  <a href={`mailto:${user?.email}`}>\n                    {user?.name}\n                  </a>\n                </p>\n              </div>\n            </div>\n          )\n      }\n    </div>\n  );\n};\n","import { useDispatch } from 'react-redux';\n\nimport './App.scss';\nimport {\n  FC,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport lodash, { shuffle } from 'lodash';\nimport { loadTodo, useAppSelector } from './store';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './react-app-env';\n\nexport const App: FC = () => {\n  const loading = useAppSelector(state => state.loader);\n  const selectedTodo = useAppSelector(state => state.selectTodo.todo);\n  const todos = useAppSelector(state => state.todos);\n  const dispatch = useDispatch();\n  // const [selectedTodo, setSelectedTodo] = useState<Todo>();\n  const [query, setQuery] = useState('');\n  const [filtredTodo, setFiltredTodo] = useState<Todo[]>([]);\n  const [targetValue, setTargetValue] = useState('all');\n  const [appliedQuery, setAppliedQuery] = useState('');\n\n  const applyQuery = useCallback(\n    lodash.debounce(setAppliedQuery, 1000), [],\n  );\n\n  const handleQuery = (input: string) => {\n    setQuery(input);\n  };\n\n  const handleTarget = (target: string) => {\n    setTargetValue(target);\n  };\n\n  const filterForTodos = (target: string) => {\n    switch (target) {\n      case 'active':\n        setFiltredTodo(todos.filter(todo => !todo.completed));\n        break;\n\n      case 'completed':\n        setFiltredTodo(todos.filter(todo => todo.completed));\n        break;\n\n      default:\n        setFiltredTodo(todos);\n        break;\n    }\n\n    setFiltredTodo(prevState => {\n      return prevState.filter(todo => todo.title.includes(appliedQuery));\n    });\n  };\n\n  useEffect(() => {\n    dispatch(loadTodo());\n  }, []);\n\n  useEffect(() => {\n    filterForTodos(targetValue);\n  }, [todos, appliedQuery, targetValue]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <div className=\"is-flex is-justify-content-space-between\">\n              <h1 className=\"title\">Todos:</h1>\n              <button\n                className=\"button is-black\"\n                type=\"button\"\n                onClick={() => {\n                  setFiltredTodo(prevState => shuffle(prevState));\n                }}\n              >\n                Shake\n              </button>\n            </div>\n\n            <div className=\"block\">\n              <TodoFilter\n                handleQuery={handleQuery}\n                query={query}\n                handleTarget={handleTarget}\n                applyQuery={applyQuery}\n\n              />\n            </div>\n\n            <div className=\"block\">\n              { loading\n                ? (\n                  <Loader />\n\n                )\n                : (\n                  <TodoList\n                    todos={filtredTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\nimport './general.scss';\nimport { store } from './store';\nimport { App } from './App';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}